---
const { dentist, number } = Astro.props;
let rating;
if (number <= 3) {
    rating = 5;
} else if (number <= 6) {
    rating = 4.5;
} else {
    rating = 4;
}
---

<a href={`/dentists/${dentist.name.replace(/ /g, '-').toLowerCase()}`} class="dentist-card">
    <div class="card-number">#{number}</div>
    <div class="card-content">
        <h3 class="card-title">{dentist.name}</h3>
        <div class="rating">
            {Array.from({ length: 5 }).map((_, i) => (
                <span class={`star ${i < Math.floor(rating) ? 'filled' : ''} ${i === Math.floor(rating) && rating % 1 !== 0 ? 'half' : ''}`}>
                    ★
                </span>
            ))}
            <!-- <span class="rating-value">({rating.toFixed(1)})</span> -->
        </div>
        <p>{dentist.address}</p>
        <p><span class="bold">Specialties:</span> {dentist.specialties.join(', ')}</p>
    </div>
    <div class="right-side-container">
        <button class="learn-more-btn">
            Learn More →
        </button>
    </div>
</a>

<style>
.dentist-card {
    border: 1px solid rgba(209, 213, 219, 0.5);
    border-radius: 12px;
    padding: 1.25rem;
    margin: 1rem 0;
    background-color: rgb(254, 254, 255);
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    display: flex;
    justify-content: space-between;
    text-decoration: none;
    color: inherit;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    position: relative;
    padding-top: 2rem;
}

.dentist-card:hover {
    transform: scale(1.02);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    cursor: pointer;
    background-color: #fefefe;
}

.card-content {
    flex: 1;
    margin-right: 1rem;
}

.right-side-container {
    display: flex;
    align-items: end;
    padding-left: 1rem;
    /* border-left: 1px solid rgba(209, 213, 219, 0.3); */
}

.learn-more-btn {
    all: unset;
    display: inline-block;
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 0.5rem;
    transition: background-color 0.2s ease;
}

.learn-more-btn:hover {
    background-color: #0056b3;
    cursor: pointer;
}

.card-number {
    position: absolute;
    top: -0.75rem;
    left: 1rem;
    background: #007bff;
    color: white;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 1.2rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.card-title {
    margin-bottom: 0;
}

.rating {
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;
    margin: 0.75rem 0;
    padding: 0.5rem;
    background-color: rgba(0, 123, 255, 0.05);
    border-radius: 0.5rem;
}

.star {
    color: #ccc;
    font-size: 1rem;
    position: relative;
}

.star.filled {
    color: #ffc107;
}

.star.half::before {
    content: '★';
    color: #ffc107;
    position: absolute;
    width: 50%;
    overflow: hidden;
}

.rating-value {
    color: #71717a;
    margin-left: 0.3rem;
}

.bold {
    font-weight: 600;
}
</style>
